Since the route selected at one router can affect the routes available at another router, we cannot simply apply the BGP decision process independently at each router.
It might also seem natural to simply select a best route locally at each router and subsequently eliminate routes from this set by comparing routes within this set of locally best routes.
To correctly handle the interaction between the MED and router ID attributes, the algorithm determines the effects of steps 4-8 of the BGP decision process by emulating the effects of a particular message ordering that correctly propagates the effects of MED on each router's best route without backtracking.
For each eBGP-speaking router in the network, the second phase of the route prediction algorithm selects the best route for that router if the best route for that router is an eBGP- learned route.
The module uses the iBGP signaling graph to determine which routes are advertised to each router, the IGP path costs between each pair of routers to determine the closest eBGP-speaking router to each ingress router (used in step 6 of the decision pro- cess), and the router ID of each iBGP session (step 7) to determine the egress router that each ingress router will select.
To verify that the emulator does not incorrectly exclude routes from the set of best eBGP routes, we check that, for each prefix, the best route at each RR appears in the set of best eBGP routes as computed by the emulator 3 .
Routing dynamics can explain these inconsistencies- through manual inspection, we found that, in many cases, the best route at the RR was clearly worse than the routes in the set of best eBGP routes (e.g., the RR's best route had the same local preference but a higher AS path length).
To verify that the emulator correctly predicts the best egress router, we examined the best routes in BGP tables at several routers and compared the (destination prefix, next-hop) pair from the routing table with the results in the PREDICTED ROUTES table entry for that router.
