If a system issues a job request with a firm deadline this job does not necessarily need to be completed, however completing the job provides no utility if its deadline has passed.
A partial explanation for the lack of previous work focusing on the notification model is that the issue becomes moot in a non-preemptive model for which all jobs have zero slack.
For sake of contradic- tion, if the theorem is not true we let t be the earliest time at which one schedule starts running a job, J , while the other schedule does not start any job.
If a rejected job is available at such an idle time this contradicts the condition for rejection, as starting that job at this time provides a feasible schedule together with all previously accepted jobs.
In order to design a competitive randomized algorithm, we apply Lemma 6 to provide a base algorithm for the "Classify and Randomly Select" technique, together with the following lemma given by Awerbuch et al. [2].
We fix an arbitrarily large \Delta and define the following four problem instances, shown in  Figure  4: ffl Instance I 1 consists of J ffl Instance I 2 consists of J I e e I 2 Figure  4: Four problem instances from proof of Theorem 10 maximum possible gain given behavior instance gain opt A B C D I I I 3 I 4  Table  1: Summary of potential gains from proof of Theorem 10 ffl Instance I 3 consists of J ffl Instance I 4 consists of J Given any of the above four instances, we can classify a particular execution of an algorithm into one of exactly four disjoint behaviors: ffl Behavior A: J 1 was accepted and began processing at time ffl Behavior B: J 1 was accepted, but the resource remained idle at time ffl Behavior C: J 1 was rejected and J 2 was accepted; ffl Behavior D: both J 1 and J 2 were rejected.
Case L3: Execution in which Q \Delta is not empty at time t, and a small job S receives the consideration of a coin flip at some point during the interval Based on the algorithm, S would only be given this consideration at a time when Q \Delta is empty, yet by time t, Q \Delta is not empty.
S is virtually scheduled with probability 1and in this case, L receives \Delta units, we can be sure that the expected charge received by L for this case is at least \Delta 3 . Case L3b: d f  t Although we do not know whether S becomes scheduled or virtually scheduled, we claim that L will receive \Delta 3 units of charge in either case.
