Introduction Clustering of data is an essential ingredient in many information retrieval systems (e.g., for building and maintaining taxonomies), and plays a central role in statis- tics, pattern recognition, biology, web search engines, distributed networks, and other fields.
The question as to how best to define "the clustering problem" seems to be particularly difficult in large unstructured databases whose members are viewed as points in some high dimensional vector space.
In this formulation, the main ingredient of graph-theoretic clustering can be stated as follows: given n data points in some metric space, do the following: (1) compute some spanning graph (such as the complete graph, or a minimumspanning tree) of the original data set; (2) Delete (in parallel) some edges of this graph (ac- cording to some criterion, such as distance); (3) output clustering (such as connected components or some partitioning of the nodes which depends on the topology) of the resulting graph.
The constraints on the clusters are that (i) the (unweighted graph theoretic) diameter of each each cluster is small (a typical value is O(logn)); (ii) the clusters belong to a small number (again a typical number is O(logn)) of color classes, so that the clusters within each class are disjoint and, (iii) for every point x and all its neighbors are contained entirely in at least one cluster.
Simply stated, any n points in Euclidean space of any dimension d can be probabilistically mapped to an O(log n=ffl 2 ) dimensional space so that no distance is increased and (with high probability) no distance shrinks by more than a factor and this mapping has time complexity O(dn log n=ffl 2 ).
The naive approach to clustering in Euclidean space is to first compute all \Gamma n\Delta distances, and then apply a clustering algorithm to the resulting weighted complete graph.
We show how to apply the agglomerative clustering algorithm to derive a subquadratic approximate Euclidean minimum spanning tree (MST) algorithm.
We note that this MST clustering might be different from an approximate agglomerative clustering using the same parameter '.
