An election mechanism was proposed by Bolot et al. [BTW94] to elect a small number of receivers and collect from them feedback regarding loss rate and congestion in the multicast group.
This algorithm converges in a small constant number of rounds regardless of n, the initial population size, and in sub-linear (in n) number of messages (for typical Rs).
For example, the model where full multiplicity feedback is given matches our model for host feedback.
Thus, the results by [Pip81], [RV97] might seem to suggest that as n grows there exists an algorithm that elects a group (at least in the case where R = [1::1]) with an expected number of rounds that approaches one.
Note that in the calculation for a certain n we obtain but the rest of the values N n (i); i < n cannot be used to obtain N values A similar system can be defined if one wishes to minimize the number of rounds it takes the system to elect a number of representatives in the desired target range.
Thus, most of the graphs presented in the paper are driven by high 23number of users (n) expected number of rounds, L=U=1, c=1.3 L=4, U=8, c=6.6 L=1, U=8, c=4.3 number of users (n) expected number of messages, L=4, U=8, c=8.5 L=1, U=8, c=5.6 Fig. 4. The basic algorithm: T (n) and N(n) as a function of n confidence simulations where each point is the average of 10,000 runs and in all cases the 1% confidence interval is less than 1%.
Thus, Equation 3 and Equation 4 should be written as Our observation is similar in spirit to the one made by Massey for the binary tree collision resolution protocols [RS90, Section 5.2.1] number of users (n) expected number of rounds, basic improved number of users (n) expected number of messages, improved Fig.
Performance of algorithm Skip-Reset where n is unknown  Figure  15 shows the performance of the algorithm in a typical scenario, where the target range is we are willing to elect up to 8 members (compare to the responders bound in [BTW94]).
