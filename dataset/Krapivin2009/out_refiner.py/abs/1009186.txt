Generally, if e 1 and e 2 are two algebra expressions over the database schema augmented with some relation variables X 1 , , we can consider the equation e A solution of this equation, given a database B with finite domain D, is a tuple (X of relations over D such that e 1 and e 2 evaluate to the same relation on the augmented database Asking whether there exists a solution of a relational algebra equation on a database is almost exactly the same thing as asking whether an existential second-order logic sentence is true on that database.
Hence, by Fagin's theorem [Fag74, EF95], the problems that can be formulated as finding a solution of some relational algebra equation are nothing but the problems in NP.
One can therefore consider the enumeration of all solutions of an equation as a query language primitive, which can be added to the nested relational algebra.
We also mention Grumbach and Vianu [GV95], who also studied a sparsity notion in connection with queries over nested relational databases, although they considered sparsity as a property of databases rather than of query language expressions  Suciu and Paredaens conjectured in general that the polynomial-space fragment of the powerset algebra has no more power than the nested relational algebra without powerset.
One can extend the nested relational algebra to the powerset algebra by adding the power-set operator, defined as follows.
The nonemptiness problem of an equation over a schema S with relation variables X is the problem of deciding, given a database over S, whether the equation has a solution on that database.
Every property of nested relational databases over some fixed schema S, which is in NP and closed under isomorphism, corresponds to the nonemptiness problem of some flat-variable equation over S.
There exists a sparse equation whose nonemptiness problem is NP-complete, if and only if 7 Sparse equations versus sparse powerset expressions Naturally, we call an equation algebra expression sparse if all equations occurring in it are sparse, cf. Proposition 5.4.
