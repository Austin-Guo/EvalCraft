In the process algebraic context [8, 16, 18], both specification and implementation may be represented as processes, and the notion that a process Q implements a process P is based on the idea that Q is more deterministic than (or equivalent to) P in terms of the chosen semantics.
To express this could be used to model the following situation: in order to improve perfor- mance, a 'slow' channel d is replaced by two channels, a high-speed yet unreliable channel s and a slow but reliable backup channel r. Relating Communicating Processes 7 di#erence formally we need to render these two conditions in some form of precise notation.
What we need is a more sophisticated device, which in our case comes in the form of another mapping, ref , constraining the possible refusals a process can exhibit, on channels which will be hidden in the composed system Q, after a given trace precisely, a sender process can admit a refusal disallowed by ref (t) if the extracted trace extr(t) admits in the target process the refusal of all communication on the corresponding channel and, moreover, the trace t itself is complete, i.e., t # dom.
J.Burton, M.Koutny and G.Pappalardo CTS snd d.1 d.1 CTS buf d.1 d.1 r.1 r.1 e.1 r.1 Fig. 4. Communicating transition systems representing CSP processes used throughout the paper (initial states have white centres).
On all the above aspects, the present work significantly extends our previous work [11, 12, 5]: the class of admissible specifications has been enlarged to include any, non-diverging, CSP process; the definition of extraction pattern has been technically improved; and the multiple implementation relation schemes previously proposed have been unified into a single one.
The essential di#erence is that the treatment of [3] is geared to the refinement of a specification compound system, whose components interact through an in- terface, into a compound implementation, whose components interact through a Relating Communicating Processes 25 di#erent (typically refined) interface.
They maintain their approach has some decisive advantages over other action refinement based ones: - flexibility: it allows multiple implementations for a given specification, and does not dictate a strict ordering for the low level actions implementing an high level one; - simplicity: it does not require the introduction of a concurrency model more complex than any of the standard interleaving ones; - the vertical implementation relation collapses to a standard horizontal one when the refinement is the identity; - deadlock properties carry over from the abstract to the concrete level; - it allows compositional verification in the same sense as our approach; - it can be endowed with a decision procedure for verification of the implementation relation.
On the other hand, it is fair to add that liveness, in the sense of [10] or temporal logic, cannot be expressed with our finite traces; however, the ability to place constraints on refusals is generally deemed a reasonable alternative in the CSP philosophy.
