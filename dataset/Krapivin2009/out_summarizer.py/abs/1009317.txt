We aim to design such an algorithm, with the additional bonus that, in the second step, the algorithm will not check more significant cells than All-Significant-Pairs, it will examine each significant cell only once (i.e., one pass), and it will use the probe cells to constrain the search in an "optimized" way.
This data structure and algorithm were shown to be highly e#cient for computing iceberg cubes with complex measures [HPDW01]; they allow us to do maximal sharing between cells in the computation.
In this subsection we describe what probe cells should be associated with a gradient cell, and how to prune the associated probe cells when the processing goes from a gradient cell to a descendant one; both will be from a dimension-matching perspective.
Example 4 Consider the 4-d probe cell c is matchable with its ancestor gradient cell c d) since c g1 contains neither #-mismatch nor solid-mismatch; c p is matchable with its sibling c d) since c g2 contains only one solid-mismatch but no *-mismatch; c p is matchable with c #, d) since c g3 contains one solid-mismatch but no #-mismatch (observe that c g3 is a sibling of a parent of c p ); c p is matchable with c d) since c g4 contains no solid-mismatch (observe that c p and c g4 have a common descendant, (a, b, c, d)); and also c p is matchable with its descendant c d) since c g5 contains only one #-mismatch.
For each special case, we will remove more probe cells than the general case in accordance with user-restrictions on what cells are "comparable", and there is no need to change other parts of the algorithm.
Although our algorithm handles ratio-based gradients, with some slight modification, one can handle gradients defined with di#erences.
One may find that the following relationships could be interesting: (1) the average price of digital cameras sold is 20% higher than usual when customer also bought (or will buy) laptop pcs, and (2) the average price of color tvs sold is 60% higher when customers also bought or will buy dvd players in comparison with situations where customers also bought or will buy repair kit.
More recently, [SS01] considered the so-called "intelligent rollup" operation on datacubes, which allows an analyst to discover the most specific generalizations of a pair of cells with some interesting properties.
