The OAEP conversion method [3] was introduced by Bellare and Rogaway in 1994 and was believed to provide semantic security against adaptive chosen-ciphertext attacks [7, 12], based on the one-wayness of a trapdoor permutation, using the (corrected) definition of plaintext-awareness [1].
Victor Shoup [15] recently showed that it is quite unlikely that such a security proof exists - at least for non-malleability - under the one-wayness of the permutation.
However, many applications require more from an encryption scheme, namely semantic security (a.k.a. polynomial security or indistinguishability of encryptions denoted IND): if the attacker has some information about the plain- text, for example that it is either "yes" or "no" to a crucial query, no adversary should learn more with the view of the ciphertext.
This security notion requires computational impossibility to distinguish between two messages, chosen by the adversary, one of which has been encrypted, with a probability significantly better than one half: her advantage Adv ind (A), where the adversary A is seen as a 2-stage Turing machine should be negligible, where Adv ind (A) is formally defined as.
However, in the following, we consider two additional related problems: the partial-domain one-wayness and the set partial-domain one-wayness of permutation f : -One-Wayness of f , means that for any adversary A whose running time is bounded by - , the success probability Succ ow (A) is upper-bounded by ", where ow -Partial-Domain One-Wayness of f , means that for any adversary A whose running time is bounded by - , the success probability Succ pd\Gammaow (A) is upper-bounded by ", where -Set Partial-Domain One-Wayness of f , means that for any adversary A that outputs a set of ' elements within time bound - , the success probability Succ s\Gammapd\Gammaow (A) is upper-bounded by ", where We denote by Succ ow (- ), (resp.
We consider several further events about a ciphertext queried to the decryption oracle: - CBad denotes the union of the bad events, ffl SBad denotes the event that ffl RBad denotes the event that - AskRS denotes the intersection of both events about the oracle queries, which means that both r and s have been asked to G and H respectively, since ffl AskR denotes the event that r (= H(s) \Phi t) has been asked to G; ffl AskS denotes the event that s has been asked to H; - Fail denotes the event that the above decryption oracle simulator outputs a wrong decryption answer to query c.
When at most one ciphertext c directly obtained from the encryption oracle, but s ? has not been asked to H, the decryption oracle simulation DS can correctly produce the decryption oracle's output on query (ciphertext) c (6= c ? ) with probability greater than " 0 , within time bound Before we start the analysis, we recall that the decryption oracle simulator is given the ciphertext c to be decrypted, as well as the ciphertext c ? obtained from the encryption oracle and both the G-List and H-List resulting from the interactions with the random oracles G and H.
We note that, in the original RSA-OAEP [3], the most significant bits are involved in the H function, but in PKCS #1 standards v2.0 and v2.1 [14] and RFC2437, the least significant bits are used: the value maskedSeedkmaskedDB is the input to f , the RSA function, where maskedSeed plays the role of t, and maskedDB the role of s.
