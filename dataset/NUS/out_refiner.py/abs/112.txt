Ding et al. report on
a search engine prototype that simply filters out from the
results for a user query any pages not in the geographical
scope of the user.
We obtain these frequencies for both the total count (tokens)
and the unique location words in each page (types), as it is
possible that a few locations would be repeated many times
across the results, indicating a global query, or that many locations
would be repeated few times each, indicating a local
query.
Weiss and Provost
use the C4.5 classifier [17], a decision tree classifier with
additional pruning of nodes to avoid overfitting.
We found
that the optimal proportion of local queries is closer to the
natural proportion with SVMs compared to C4.5 classifiers;
the proportions chosen from our development set were 50%
for the linear SVM classifier with equal error costs, 30% for
the linear SVM classifier with unequal error costs, 30% for
the Gaussian SVM classifier with equal error costs, and 20%
for the Gaussian SVM classifier with unequal error costs.
The classifier using a linear kernel SVM
with unequal error costs achieves the highest F measure,
12
We also experimented with variable error costs for the
Ripper
classifier, using the same 2:1 error cost correspondence,
but the resulting classifier was identical to the
Ripper classifier
obtained with equal error costs.
If no locations are
present in the query (e.g., as in query [houses for sale]), in
the absence of further information we can attempt to "localize"
the query results to the geographical area of the user
issuing the query, for which we can rely on registration information
provided by the user, for example.
Given a query specified by the user, we supply
first the unmodified query to the search engine and collect
the top 50 results.
Automatic query expansion using SMART: TREC 3.
In Proceedings of the Third Text REtrieval Conference
(TREC 3), pages 69 80, April 1995.
