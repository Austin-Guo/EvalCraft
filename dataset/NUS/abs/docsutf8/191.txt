The Potential of the Cell Processor for Scientific Computing
ABSTRACT
The slowing pace of commodity microprocessor performance
improvements combined with ever-increasing chip power demands
has become of utmost concern to computational scientists
. As a result, the high performance computing community
is examining alternative architectures that address
the limitations of modern cache-based designs. In this work,
we examine the potential of using the forthcoming STI Cell
processor as a building block for future high-end computing
systems. Our work contains several novel contributions.
First, we introduce a performance model for Cell and apply
it to several key scientific computing kernels: dense matrix
multiply, sparse matrix vector multiply, stencil computations
, and 1D/2D FFTs.
The difficulty of programming
Cell, which requires assembly level intrinsics for the
best performance, makes this model useful as an initial step
in algorithm design and evaluation. Next, we validate the
accuracy of our model by comparing results against published
hardware results, as well as our own implementations
on the Cell full system simulator. Additionally, we compare
Cell performance to benchmarks run on leading superscalar
(AMD Opteron), VLIW (Intel Itanium2), and vector
(Cray X1E) architectures. Our work also explores several
different mappings of the kernels and demonstrates a simple
and effective programming model for Cell's unique architecture
. Finally, we propose modest microarchitectural modifications
that could significantly increase the efficiency of
double-precision calculations. Overall results demonstrate
the tremendous potential of the Cell architecture for scientific
computations in terms of both raw performance and
power efficiency.
Categories and Subject Descriptors
C.1.2 [Processor Architectures] : Multiple Data Stream Architectures
-- Single-instruction- stream, multiple-data-stream
processors (SIMD)
C.1.3 [Processor Architectures] : Other Architecture Styles
-- Heterogeneous (hybrid) systems
C.1.4 [Processor Architectures] : Parallel Architectures
C.4 [Performance of Systems] : Design studies, modeling
techniques, performance attributes
D.1.3 [Programming Techniques] : Concurrent Programming
-- Parallel Programming
General Terms
Performance, Design
